<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Autocomplete - LYD Design System V2</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    <style>
        :root {
            /* Live Your Dreams CI Colors */
            --lyd-deep-blue: #000066;
            --lyd-royal-blue: #3366CC;
            --lyd-accent: #E8F0FE;
            --lyd-grey: #666666;
            --lyd-line: #E5E7EB;
            --lyd-text: #111111;
            --lyd-bg: #ffffff;
            
            /* Additional Colors */
            --lyd-success: #10b981;
            --lyd-warning: #f59e0b;
            --lyd-error: #ef4444;
            
            /* Typography Scale - CI konform */
            --font-family-primary: 'Inter', system-ui, -apple-system, 'Segoe UI', Roboto, Helvetica, Arial, 'Noto Sans', sans-serif;
            --font-family-display: 'Inter', system-ui, -apple-system, sans-serif;
            
            --font-size-xs: 12px;
            --font-size-sm: 14px;
            --font-size-base: 16px;
            --font-size-lg: 18px;
            --font-size-xl: 20px;
            --font-size-2xl: 24px;
            --font-size-3xl: 30px;
            --font-size-4xl: 36px;
            --font-size-5xl: 48px;
            
            /* Spacing */
            --spacing-xs: 4px;
            --spacing-sm: 8px;
            --spacing-md: 16px;
            --spacing-lg: 24px;
            --spacing-xl: 32px;
            --spacing-2xl: 48px;
            --spacing-3xl: 64px;
            
            /* Shadows */
            --shadow-xs: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
            --shadow-sm: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
            --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
            
            /* Border Radius */
            --radius-sm: 4px;
            --radius-md: 8px;
            --radius-lg: 12px;
            --radius-xl: 16px;
        }
        * { margin: 0; padding: 0; box-sizing: border-box; }
                body {
            font-family: var(--font-family-primary);
            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
            color: var(--lyd-text);
            line-height: 1.6;
            display: flex;
            min-height: 100vh;
        }
        
        /* Navigation structure - same as other components */
        .sidebar { width: 280px; background: var(--lyd-bg); border-right: 1px solid var(--lyd-line); position: fixed; height: 100vh; overflow-y: auto; z-index: 1000; box-shadow: var(--shadow-sm); }
        .sidebar-header { padding: var(--spacing-xl); border-bottom: 1px solid var(--lyd-line); text-align: center; }
        .lyd-logo { width: 120px; height: auto; margin-bottom: var(--spacing-md); transform: scale(2); transform-origin: center; margin-top: 40px; margin-bottom: 60px; }
        .logo-subtitle { font-size: var(--font-size-sm); color: var(--lyd-grey); font-weight: 500; }
        .nav-section { padding: var(--spacing-md) 0; }
        .nav-section-title { padding: var(--spacing-sm) var(--spacing-lg); font-size: var(--font-size-xs); font-weight: 600; color: var(--lyd-gray-400); text-transform: uppercase; letter-spacing: 0.5px; }
        .nav-item { display: block; padding: 12px var(--spacing-lg); color: var(--lyd-grey); text-decoration: none; font-size: var(--font-size-sm); font-weight: 500; transition: all 0.2s ease; border-left: 3px solid transparent; }
        .nav-item:hover { color: var(--lyd-primary); border-left-color: var(--lyd-primary); background: rgba(0, 102, 255, 0.05); }
        .nav-item.active { color: var(--lyd-primary); border-left-color: var(--lyd-primary); background: rgba(0, 102, 255, 0.1); font-weight: 600; }
        
        .main-content { flex: 1; margin-left: 280px; padding: var(--spacing-2xl); max-width: 1400px; }
        .page-header { margin-bottom: var(--spacing-2xl); }
        .page-title { font-size: var(--font-size-5xl); font-weight: 400; font-family: var(--font-family-display); letter-spacing: 6px; margin-bottom: var(--spacing-md); background: linear-gradient(180deg, var(--lyd-royal-blue) 0%, var(--lyd-deep-blue) 100%); -webkit-background-clip: text; -webkit-text-fill-color: transparent; text-transform: uppercase; }
        .page-subtitle { font-size: var(--font-size-lg); color: var(--lyd-grey); max-width: 800px; margin-bottom: var(--spacing-2xl); }
        .section { margin-bottom: var(--spacing-3xl); }
        .section-title { font-size: var(--font-size-3xl); font-weight: 400; font-family: var(--font-family-display); letter-spacing: 6px; color: var(--lyd-text); margin-bottom: var(--spacing-xl); background: linear-gradient(180deg, var(--lyd-royal-blue) 0%, var(--lyd-deep-blue) 100%); -webkit-background-clip: text; -webkit-text-fill-color: transparent; text-transform: uppercase; }
        .showcase-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(400px, 1fr)); gap: var(--spacing-lg); margin-bottom: var(--spacing-2xl); }
        .showcase-item { background: var(--lyd-bg); border-radius: 12px; border: 1px solid var(--lyd-line); overflow: hidden; box-shadow: var(--shadow-sm); }
        .showcase-item h3 { padding: var(--spacing-lg); font-size: var(--font-size-lg); font-weight: 600; color: var(--lyd-gray-900); border-bottom: 1px solid var(--lyd-line); background: var(--lyd-gray-50); }
        .showcase-item p { padding: 0 var(--spacing-lg); color: var(--lyd-grey); font-size: var(--font-size-sm); margin-bottom: var(--spacing-md); }
        .showcase-demo { padding: var(--spacing-lg); background: var(--lyd-bg); }
        
        /* Component-specific styles */
        
        .lyd-autocomplete { position: relative; width: 100%; }
        .lyd-autocomplete-input-wrapper { position: relative; }
        .lyd-autocomplete-icon { position: absolute; left: 12px; top: 50%; transform: translateY(-50%); width: 20px; height: 20px; color: var(--lyd-grey); }
        .lyd-autocomplete-input { width: 100%; padding: var(--spacing-md) var(--spacing-md) var(--spacing-md) 40px; border: 2px solid var(--lyd-line); border-radius: 8px; font-size: var(--font-size-base); }
        .lyd-autocomplete-dropdown { 
            position: absolute; 
            top: 100%; 
            left: 0; 
            right: 0; 
            background: var(--lyd-bg); 
            border: 1px solid var(--lyd-line); 
            border-radius: 8px; 
            box-shadow: var(--shadow-lg); 
            margin-top: 4px; 
            z-index: 9999; 
            max-height: 300px; 
            overflow-y: auto; 
            display: none;
            opacity: 0;
            transform: translateY(-8px);
            transition: all 0.2s ease;
        }
        .lyd-autocomplete-dropdown.show { 
            display: block; 
            opacity: 1; 
            transform: translateY(0);
        }
        .lyd-autocomplete.focused .lyd-autocomplete-dropdown { 
            display: block; 
            opacity: 1; 
            transform: translateY(0);
        }
        .lyd-autocomplete-item { padding: var(--spacing-md); cursor: pointer; transition: background 0.2s ease; }
        .lyd-autocomplete-item:hover, .lyd-autocomplete-item.active { background: var(--lyd-gray-50); }
        .lyd-autocomplete-item-title { font-weight: 600; color: var(--lyd-gray-900); margin-bottom: 2px; }
        .lyd-autocomplete-item-subtitle { font-size: var(--font-size-sm); color: var(--lyd-grey); }
        
        
        /* Implementation and accessibility styling */
        .implementation-section { background: var(--lyd-bg); border-radius: 12px; border: 1px solid var(--lyd-line); overflow: hidden; box-shadow: var(--shadow-sm); margin-bottom: var(--spacing-lg); }
        .implementation-section h3 { padding: var(--spacing-lg); font-size: var(--font-size-lg); font-weight: 600; color: var(--lyd-gray-900); border-bottom: 1px solid var(--lyd-line); background: var(--lyd-gray-50); margin: 0; }
        .code-block { background: var(--lyd-gray-900); border-radius: 8px; padding: var(--spacing-lg); position: relative; overflow-x: auto; }
        .code-block pre { color: var(--lyd-gray-100); font-family: 'Monaco', 'Menlo', monospace; font-size: var(--font-size-sm); line-height: 1.6; margin: 0; }
        .lyd-button { display: inline-flex; align-items: center; gap: 8px; padding: 8px 16px; border-radius: 6px; font-weight: 600; font-size: var(--font-size-sm); border: none; cursor: pointer; transition: all 0.3s ease; position: absolute; top: 12px; right: 12px; }
        .lyd-button.copy { background: var(--lyd-primary); color: var(--lyd-bg); }
        .accessibility-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: var(--spacing-lg); }
        .accessibility-item { background: var(--lyd-bg); border-radius: 8px; padding: var(--spacing-lg); box-shadow: var(--shadow-sm); }
        .accessibility-item h3 { font-size: var(--font-size-lg); font-weight: 600; color: var(--lyd-gray-900); margin-bottom: var(--spacing-sm); display: flex; align-items: center; gap: var(--spacing-sm); }
        .accessibility-item h3::before { content: "âœ“"; color: var(--lyd-primary); font-weight: bold; flex-shrink: 0; }
        .accessibility-item p { color: var(--lyd-grey); font-size: var(--font-size-sm); line-height: 1.6; }
        
        @media (max-width: 768px) {
            .sidebar { width: 100%; height: auto; position: relative; }
            .main-content { margin-left: 0; padding: var(--spacing-lg); }
            .showcase-grid { grid-template-columns: 1fr; }
        }
    </style>
</head>
<body>
    <nav class="sidebar">
        <div class="sidebar-header">
            <svg class="lyd-logo" viewBox="0 0 990 800" xmlns="http://www.w3.org/2000/svg">
                <defs>
                    <linearGradient id="crescentGradientV2" x1="0%" y1="0%" x2="0%" y2="100%">
                        <stop offset="0%" style="stop-color:#000066;stop-opacity:1" />
                        <stop offset="100%" style="stop-color:#3366CC;stop-opacity:1" />
                    </linearGradient>
                    <linearGradient id="textGradientLYD" x1="0" y1="360" x2="0" y2="700" gradientUnits="userSpaceOnUse">
                        <stop offset="0%" style="stop-color:#3366CC;stop-opacity:1" />
                        <stop offset="100%" style="stop-color:#000066;stop-opacity:1" />
                    </linearGradient>
                </defs>
                <g transform="translate(0.000000,748.000000) scale(0.100000,-0.100000)" fill="url(#crescentGradientV2)" stroke="none">
                    <path d="M3049 5306 c-8 -7 -66 -45 -131 -84 -386 -239 -848 -602 -1168 -922 -612 -610 -818 -1104 -650 -1558 46 -122 119 -239 257 -408 43 -53 118 -148 166 -212 294 -387 385 -708 302 -1067 -68 -294 -287 -641 -619 -983 -51 -52 -65 -72 -52 -72 34 0 328 159 471 255 371 248 627 534 751 839 54 131 92 298 106 456 15 181 2 423 -54 965 -39 382 -42 431 -42 715 -1 310 3 369 45 610 82 474 274 935 576 1379 61 90 73 116 42 87z"/>
                </g>
                <g fill="url(#textGradientLYD)">
                    <text x="370" y="420" font-family="system-ui, -apple-system, sans-serif" font-size="132" font-weight="400" letter-spacing="6px">LIVE</text>
                    <text x="370" y="540" font-family="system-ui, -apple-system, sans-serif" font-size="132" font-weight="400" letter-spacing="22px">YOUR</text>
                    <text x="370" y="660" font-family="system-ui, -apple-system, sans-serif" font-size="132" font-weight="400" letter-spacing="6px">DREAMS</text>
                </g>
            </svg>
            <div class="logo-subtitle">Design System V2</div>
        </div>
        
        <div class="nav-section">
            <div class="nav-section-title">Designing</div>
            <a href="/designing/" class="nav-item">Introduction</a>
        </div>
        
        <div class="nav-section">
            <div class="nav-section-title">Developing</div>
            <a href="/developing/" class="nav-item">Introduction</a>
            <a href="/developing/nextjs/" class="nav-item">Next.js Integration</a>
        </div>        <div class="nav-section">
            <div class="nav-section-title">Components</div>
            <a href="/components/" class="nav-item">Introduction</a>
            <a href="/components/buttons/" class="nav-item">Button</a>
            <a href="/components/inputs/" class="nav-item">Input</a>
            <a href="/components/cards/" class="nav-item">Card</a>
            <a href="/components/select/" class="nav-item">Select</a>
            <a href="/components/accordion/" class="nav-item">Accordion</a>
            <a href="/components/modal/" class="nav-item">Modal</a>
            <a href="/components/dropdown/" class="nav-item">Dropdown</a>
            <a href="/components/checkbox/" class="nav-item">Checkbox</a>
            <a href="/components/radio/" class="nav-item">Radio</a>
            <a href="/components/toast/" class="nav-item">Toast</a>
            <a href="/components/table/" class="nav-item">Table</a>
            <a href="/components/textarea/" class="nav-item">Textarea</a>
            <a href="/components/switch/" class="nav-item">Switch</a>
            <a href="/components/slider/" class="nav-item">Slider</a>
            <a href="/components/alert/" class="nav-item">Alert</a>
            <a href="/components/badge/" class="nav-item">Badge</a>
            <a href="/components/datepicker/" class="nav-item">Date Picker</a>
            <a href="/components/avatar/" class="nav-item">Avatar</a>
            <a href="/components/navbar/" class="nav-item">Navbar</a>
            <a href="/components/tabs/" class="nav-item">Tabs</a>
            <a href="/components/progress/" class="nav-item">Progress</a>
            <a href="/components/calendar/" class="nav-item">Calendar</a>
            <a href="/components/autocomplete/" class="nav-item">Autocomplete</a>
            <a href="/components/pagination/" class="nav-item">Pagination</a>
            <a href="/components/tooltip/" class="nav-item">Tooltip</a>
        </div>
        
        <div class="nav-section">
            <div class="nav-section-title">Styles</div>
            <a href="/styles/" class="nav-item">Introduction</a>
            <a href="/components/typography/" class="nav-item">Typography</a>
            <a href="/styles/grid/" class="nav-item">Grid</a>
            <a href="/styles/colors/" class="nav-item">Colors</a>
            <a href="/styles/spacing/" class="nav-item">Spacing</a>
        </div>
        
        <div class="nav-section">
            <div class="nav-section-title">Patterns</div>
            <a href="/patterns/" class="nav-item">Introduction</a>
            <a href="/patterns/property-cards/" class="nav-item">Property Cards</a>
            <a href="/patterns/header/" class="nav-item">Header</a>
            <a href="/patterns/footer/" class="nav-item">Footer</a>
            <a href="/patterns/forms/" class="nav-item">Forms</a>
            <a href="/patterns/lead-management/" class="nav-item">Lead Management</a>
        </div>
    </nav>
    
    <main class="main-content">
        <div class="page-header">
            <h1 class="page-title">Autocomplete</h1>
            <p class="page-subtitle">Smart search and autocomplete components for location search, property filtering, and intelligent suggestions.</p>
        </div>
        
        
        <section class="section">
            <h2 class="section-title">Smart Search</h2>
            
            <div class="showcase-grid">
                <div class="showcase-item">
                    <h3>Location Search</h3>
                    <p>Intelligent location and property search</p>
                    <div class="showcase-demo">
                        <div class="lyd-autocomplete focused" aria-label="Autocomplete" role="combobox">
                            <div class="lyd-autocomplete-input-wrapper" aria-label="Autocomplete" role="combobox">
                                <svg class="lyd-autocomplete-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <circle cx="11" cy="11" r="8"/>
                                    <path d="m21 21-4.35-4.35"/>
                                </svg>
                                <input type="text" class="lyd-autocomplete-input" placeholder="Search Munich properties..." value="Munich Schwabing">
                            </div>
                            <div class="lyd-autocomplete-dropdown show" aria-label="Autocomplete" role="combobox">
                                <div class="lyd-autocomplete-item active" aria-label="Autocomplete" role="combobox">
                                    <div class="lyd-autocomplete-item-content" aria-label="Autocomplete" role="combobox">
                                        <div class="lyd-autocomplete-item-title" aria-label="Autocomplete" role="combobox">Munich Schwabing</div>
                                        <div class="lyd-autocomplete-item-subtitle" aria-label="Autocomplete" role="combobox">Bavaria, Germany â€¢ 127 properties</div>
                                    </div>
                                </div>
                                <div class="lyd-autocomplete-item" aria-label="Autocomplete" role="combobox">
                                    <div class="lyd-autocomplete-item-content" aria-label="Autocomplete" role="combobox">
                                        <div class="lyd-autocomplete-item-title" aria-label="Autocomplete" role="combobox">Munich Maxvorstadt</div>
                                        <div class="lyd-autocomplete-item-subtitle" aria-label="Autocomplete" role="combobox">Bavaria, Germany â€¢ 89 properties</div>
                                    </div>
                                </div>
                                <div class="lyd-autocomplete-item" aria-label="Autocomplete" role="combobox">
                                    <div class="lyd-autocomplete-item-content" aria-label="Autocomplete" role="combobox">
                                        <div class="lyd-autocomplete-item-title" aria-label="Autocomplete" role="combobox">Munich City Center</div>
                                        <div class="lyd-autocomplete-item-subtitle" aria-label="Autocomplete" role="combobox">Bavaria, Germany â€¢ 203 properties</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        
        
        <section class="section">
            <h2 class="section-title">Implementation Guide</h2>
            
            <div class="implementation-section">
                <h3>HTML Usage</h3>
                <div class="code-block">
                        <button class="lyd-button copy" aria-label="Interactive button" role="button" aria-label="Button" role="button">Copy</button>
                        <pre>&lt;!-- Property Location Autocomplete --&gt;
&lt;div class="lyd-autocomplete"&gt;
    &lt;div class="lyd-autocomplete-input-wrapper"&gt;
        &lt;svg class="lyd-autocomplete-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"&gt;
            &lt;circle cx="11" cy="11" r="8"/&gt;
            &lt;path d="m21 21-4.35-4.35"/&gt;
        &lt;/svg&gt;
        &lt;input type="text" class="lyd-autocomplete-input" placeholder="Search Munich properties..." autocomplete="off"&gt;
    &lt;/div&gt;
    &lt;div class="lyd-autocomplete-dropdown"&gt;
        &lt;div class="lyd-autocomplete-item"&gt;
            &lt;div class="lyd-autocomplete-item-title"&gt;Munich Schwabing&lt;/div&gt;
            &lt;div class="lyd-autocomplete-item-subtitle"&gt;Bavaria, Germany â€¢ 127 properties&lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="lyd-autocomplete-item"&gt;
            &lt;div class="lyd-autocomplete-item-title"&gt;Munich Maxvorstadt&lt;/div&gt;
            &lt;div class="lyd-autocomplete-item-subtitle"&gt;Bavaria, Germany â€¢ 84 properties&lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="lyd-autocomplete-item"&gt;
            &lt;div class="lyd-autocomplete-item-title"&gt;Munich City Center&lt;/div&gt;
            &lt;div class="lyd-autocomplete-item-subtitle"&gt;Bavaria, Germany â€¢ 156 properties&lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;!-- Autocomplete States Management --&gt;
&lt;script&gt;
document.querySelectorAll('.lyd-autocomplete').forEach(autocomplete =&gt; {
    const input = autocomplete.querySelector('.lyd-autocomplete-input');
    const dropdown = autocomplete.querySelector('.lyd-autocomplete-dropdown');
    
    input.addEventListener('focus', () =&gt; {
        autocomplete.classList.add('focused');
        dropdown.classList.add('show');
    });
    
    input.addEventListener('blur', () =&gt; {
        setTimeout(() =&gt; {
            autocomplete.classList.remove('focused');
            dropdown.classList.remove('show');
        }, 200);
    });
});
&lt;/script&gt;</pre>
                </div>
            </div>

            <div class="implementation-section">
                <h3>Next.js Integration</h3>
                <div class="code-block">
                        <button class="lyd-button copy" aria-label="Interactive button" role="button" aria-label="Button" role="button">Copy</button>
                        <pre>import { useState, useEffect, useRef } from 'react';

interface AutocompleteItem {
  id: string;
  title: string;
  subtitle?: string;
}

interface AutocompleteProps {
  placeholder?: string;
  items: AutocompleteItem[];
  onSelect: (item: AutocompleteItem) =&gt; void;
  onSearch?: (query: string) =&gt; void;
  className?: string;
}

export const LydAutocomplete: React.FC&lt;AutocompleteProps&gt; = ({
  placeholder = "Search...",
  items,
  onSelect,
  onSearch,
  className = ''
}) =&gt; {
  const [isOpen, setIsOpen] = useState(false);
  const [query, setQuery] = useState('');
  const [filteredItems, setFilteredItems] = useState(items);
  const [activeIndex, setActiveIndex] = useState(-1);
  const inputRef = useRef&lt;HTMLInputElement&gt;(null);
  const dropdownRef = useRef&lt;HTMLDivElement&gt;(null);

  useEffect(() =&gt; {
    const filtered = items.filter(item =&gt;
      item.title.toLowerCase().includes(query.toLowerCase()) ||
      (item.subtitle && item.subtitle.toLowerCase().includes(query.toLowerCase()))
    );
    setFilteredItems(filtered);
    setActiveIndex(-1);
  }, [query, items]);

  const handleInputChange = (e: React.ChangeEvent&lt;HTMLInputElement&gt;) =&gt; {
    const value = e.target.value;
    setQuery(value);
    setIsOpen(true);
    onSearch?.(value);
  };

  const handleItemClick = (item: AutocompleteItem) =&gt; {
    setQuery(item.title);
    setIsOpen(false);
    onSelect(item);
    inputRef.current?.focus();
  };

  const handleKeyDown = (e: React.KeyboardEvent) =&gt; {
    if (!isOpen) return;
    
    switch (e.key) {
      case 'ArrowDown':
        e.preventDefault();
        setActiveIndex(prev =&gt; 
          prev &lt; filteredItems.length - 1 ? prev + 1 : prev
        );
        break;
      case 'ArrowUp':
        e.preventDefault();
        setActiveIndex(prev =&gt; prev &gt; 0 ? prev - 1 : -1);
        break;
      case 'Enter':
        e.preventDefault();
        if (activeIndex &gt;= 0 && filteredItems[activeIndex]) {
          handleItemClick(filteredItems[activeIndex]);
        }
        break;
      case 'Escape':
        setIsOpen(false);
        setActiveIndex(-1);
        break;
    }
  };

  return (
    &lt;div className={`lyd-autocomplete ${isOpen ? 'focused' : ''} ${className}`}&gt;
      &lt;div className="lyd-autocomplete-input-wrapper"&gt;
        &lt;svg className="lyd-autocomplete-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2"&gt;
          &lt;circle cx="11" cy="11" r="8"/&gt;
          &lt;path d="m21 21-4.35-4.35"/&gt;
        &lt;/svg&gt;
        &lt;input
          ref={inputRef}
          type="text"
          className="lyd-autocomplete-input"
          placeholder={placeholder}
          value={query}
          onChange={handleInputChange}
          onFocus={() =&gt; setIsOpen(true)}
          onBlur={() =&gt; setTimeout(() =&gt; setIsOpen(false), 200)}
          onKeyDown={handleKeyDown}
          autoComplete="off"
        /&gt;
      &lt;/div&gt;
      
      {isOpen && filteredItems.length &gt; 0 && (
        &lt;div 
          ref={dropdownRef}
          className={`lyd-autocomplete-dropdown ${isOpen ? 'show' : ''}`}
        &gt;
          {filteredItems.map((item, index) =&gt; (
            &lt;div
              key={item.id}
              className={`lyd-autocomplete-item ${index === activeIndex ? 'active' : ''}`}
              onClick={() =&gt; handleItemClick(item)}
            &gt;
              &lt;div className="lyd-autocomplete-item-title"&gt;{item.title}&lt;/div&gt;
              {item.subtitle && (
                &lt;div className="lyd-autocomplete-item-subtitle"&gt;{item.subtitle}&lt;/div&gt;
              )}
            &lt;/div&gt;
          ))}
        &lt;/div&gt;
      )}
    &lt;/div&gt;
  );
};

// Usage Example
export default function PropertySearch() {
  const locations = [
    { id: '1', title: 'Munich Schwabing', subtitle: 'Bavaria, Germany â€¢ 127 properties' },
    { id: '2', title: 'Munich Maxvorstadt', subtitle: 'Bavaria, Germany â€¢ 84 properties' },
    { id: '3', title: 'Munich City Center', subtitle: 'Bavaria, Germany â€¢ 156 properties' }
  ];

  const handleLocationSelect = (location: AutocompleteItem) =&gt; {
    console.log('Selected:', location);
  };

  const handleSearch = (query: string) =&gt; {
    console.log('Searching for:', query);
  };

  return (
    &lt;div className="property-search"&gt;
      &lt;LydAutocomplete
        placeholder="Search Munich properties..."
        items={locations}
        onSelect={handleLocationSelect}
        onSearch={handleSearch}
      /&gt;
    &lt;/div&gt;
  );
}</pre>
                </div>
            </div>
        </section>
        
        <section class="section">
            <h2 class="section-title">API Reference</h2>
            <div class="api-section">
                <h3>Autocomplete Classes</h3>
                <table class="api-table">
                    <thead>
                        <tr>
                            <th>Class</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><code>.lyd-autocomplete</code></td>
                            <td>Base autocomplete class with premium styling</td>
                        </tr>
                        <tr>
                            <td><code>.lyd-autocomplete-wrapper</code></td>
                            <td>autocomplete container with consistent spacing</td>
                        </tr>
                        <tr>
                            <td><code>.small</code></td>
                            <td>Small autocomplete size (14px - Typography Scale)</td>
                        </tr>
                        <tr>
                            <td><code>.large</code></td>
                            <td>Large autocomplete size (18px - Typography Scale)</td>
                        </tr>
                        <tr>
                            <td><code>.primary</code></td>
                            <td>Primary autocomplete variant with CI gradient</td>
                        </tr>
                        <tr>
                            <td><code>.success</code></td>
                            <td>Success state with green styling</td>
                        </tr>
                        <tr>
                            <td><code>.error</code></td>
                            <td>Error state with red styling and validation</td>
                        </tr>
                        <tr>
                            <td><code>.disabled</code></td>
                            <td>Disabled state with reduced opacity</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </section>
        
        <section class="section">
            <h2 class="section-title">Real Estate Autocomplete Types</h2>
            
            <div class="showcase-grid">
                <div class="showcase-item">
                    <h3>Property Management</h3>
                    <p>Professional autocomplete for real estate applications</p>
                    <div class="showcase-demo">
                        <div class="lyd-autocomplete primary" aria-label="Autocomplete" role="combobox">
                            <span>Property Example</span>
                        </div>
                    </div>
                </div>

                <div class="showcase-item">
                    <h3>Investment Analysis</h3>
                    <p>Financial autocomplete for property investment</p>
                    <div class="showcase-demo">
                        <div class="lyd-autocomplete secondary" aria-label="Autocomplete" role="combobox">
                            <span>Investment Example</span>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <section class="section">
            <h2 class="section-title">Accessibility & Best Practices</h2>
            
            <div class="accessibility-content">
                <h3>Accessibility & Best Practices</h3>
                <div class="accessibility-grid">
                    <div class="accessibility-item">
                        <h4>Keyboard Navigation</h4>
                        <ul>
                            <li>Tab navigation support</li>
                            <li>Enter/Space key activation</li>
                            <li>Arrow keys for selection</li>
                            <li>Escape key to close</li>
                        </ul>
                    </div>
                    
                    <div class="accessibility-item">
                        <h4>Screen Reader Support</h4>
                        <ul>
                            <li>ARIA labels and descriptions</li>
                            <li>Role attributes</li>
                            <li>State announcements</li>
                            <li>Focus management</li>
                        </ul>
                    </div>
                    
                    <div class="accessibility-item">
                        <h4>Visual Accessibility</h4>
                        <ul>
                            <li>High contrast mode support</li>
                            <li>Focus indicators</li>
                            <li>Color contrast compliance</li>
                            <li>Reduced motion support</li>
                        </ul>
                    </div>
                    
                    <div class="accessibility-item">
                        <h4>Best Practices</h4>
                        <ul>
                            <li>Use semantic HTML elements</li>
                            <li>Provide meaningful labels</li>
                            <li>Test with assistive technologies</li>
                            <li>Follow WCAG 2.2 AA guidelines</li>
                        </ul>
                    </div>
                </div>
            </div></section>
    </main>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const currentPath = window.location.pathname;
            document.querySelectorAll('.nav-item').forEach(item => {
                if (item.getAttributes('href') === currentPath) {
                    item.classList.add('active');
                }
            });
            
            document.querySelectorAll('.lyd-button.copy').forEach(button => {
                button.addEventListener('click', function() {
                    const codeBlock = this.parentElement.querySelector('pre');
                    const text = codeBlock.textContent;
                    navigator.clipboard.writeText(text).then(() => {
                        const originalText = this.textContent;
                        this.textContent = 'Copied!';
                        setTimeout(() => { this.textContent = originalText; }, 2000);
                    });
                });
            });

            // Autocomplete functionality
            document.querySelectorAll('.lyd-autocomplete').forEach(autocomplete => {
                const input = autocomplete.querySelector('.lyd-autocomplete-input');
                const dropdown = autocomplete.querySelector('.lyd-autocomplete-dropdown');
                
                if (input && dropdown) {
                    // Show dropdown on focus
                    input.addEventListener('focus', function() {
                        autocomplete.classList.add('focused');
                        dropdown.classList.add('show');
                    });
                    
                    // Hide dropdown on blur (with small delay)
                    input.addEventListener('blur', function() {
                        setTimeout(() => {
                            autocomplete.classList.remove('focused');
                            dropdown.classList.remove('show');
                        }, 200);
                    });
                    
                    // Handle item selection
                    dropdown.addEventListener('click', function(e) {
                        const item = e.target.closest('.lyd-autocomplete-item');
                        if (item) {
                            const title = item.querySelector('.lyd-autocomplete-item-title');
                            if (title) {
                                input.value = title.textContent;
                                autocomplete.classList.remove('focused');
                                dropdown.classList.remove('show');
                                input.focus();
                            }
                        }
                    });
                }
            });
        });
    </script>
</body>
</html>