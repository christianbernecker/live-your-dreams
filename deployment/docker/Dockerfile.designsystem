# Live Your Dreams Design System - Production Docker Image
FROM node:18-alpine AS builder

# Build Design System
WORKDIR /app
COPY design-system/package.json design-system/vite.config.js ./
COPY design-system/src/ ./src/
COPY design-system/assets/ ./assets/
COPY design-system/*.html ./

RUN npm install && npm run build

# Production stage with Nginx
FROM nginx:alpine

# Copy built Design System
COPY --from=builder /app/dist/ /usr/share/nginx/html/dist/
COPY --from=builder /app/*.html /usr/share/nginx/html/
COPY --from=builder /app/assets/ /usr/share/nginx/html/assets/
COPY design-system/components/ /usr/share/nginx/html/components/
COPY design-system/patterns/ /usr/share/nginx/html/patterns/
COPY design-system/styles/ /usr/share/nginx/html/styles/
COPY design-system/designing/ /usr/share/nginx/html/designing/
COPY design-system/developing/ /usr/share/nginx/html/developing/

# Nginx configuration
COPY <<EOF /etc/nginx/conf.d/default.conf
server {
    listen 80;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;
    
    # Disable caching for development
    add_header Cache-Control "no-cache, no-store, must-revalidate";
    add_header Pragma "no-cache";
    add_header Expires "0";
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    
    # Handle assets FIRST - before other routes
    location /assets/ {
        try_files \$uri =404;
        add_header Content-Type image/svg+xml;
        expires 30d;
    }
    
    location /src/ {
        try_files \$uri =404;
        add_header Content-Type application/javascript;
    }
    
    # Handle designing routes
    location ~ ^/designing/([^/]+)/?$ {
        try_files /designing/\$1/index.html =404;
    }

    # Handle developing routes
    location ~ ^/developing/([^/]+)/?$ {
        try_files /developing/\$1/index.html =404;
    }

    # Handle component routes
    location ~ ^/components/([^/]+)/?$ {
        try_files /components/\$1/index.html =404;
    }

    # Handle pattern routes  
    location ~ ^/patterns/([^/]+)/?$ {
        try_files /patterns/\$1/index.html =404;
    }

    # Handle style routes
    location ~ ^/styles/([^/]+)/?$ {
        try_files /styles/\$1/index.html =404;
    }

    # Handle enhanced-demo specifically
    location /enhanced-demo {
        try_files /enhanced-demo.html =404;
    }

    # Root and fallback
    location / {
        try_files \$uri \$uri/ /index.html;
    }
    
    location /health {
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
EOF

EXPOSE 80

HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/health || exit 1