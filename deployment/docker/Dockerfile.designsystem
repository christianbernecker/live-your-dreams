# Live Your Dreams Design System - V2 as Main Production Docker Image
FROM node:18-alpine AS builder

# Build Design System (Legacy V1 components for compatibility)
WORKDIR /app
COPY design-system/package.json design-system/vite.config.js ./
COPY design-system/src/ ./src/
COPY design-system/assets/ ./assets/
COPY design-system/*.html ./

RUN npm install && npm run build

# Production stage with Nginx
FROM nginx:alpine

# Copy V2 as ROOT (main version)
COPY design-system/v2/ /usr/share/nginx/html/

# Copy legacy build assets for compatibility
COPY --from=builder /app/dist/ /usr/share/nginx/html/dist/
COPY --from=builder /app/assets/ /usr/share/nginx/html/assets/
COPY --from=builder /app/src/ /usr/share/nginx/html/src/

# Nginx configuration - V2 as Main
COPY <<EOF /etc/nginx/conf.d/default.conf
server {
    listen 80;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;
    
    # Disable caching for development
    add_header Cache-Control "no-cache, no-store, must-revalidate";
    add_header Pragma "no-cache";
    add_header Expires "0";
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    
    # Handle V2 assets and shared files
    location /assets/ {
        try_files \$uri =404;
        add_header Content-Type image/svg+xml;
        expires 30d;
    }
    
    location /src/ {
        try_files \$uri =404;
        add_header Content-Type application/javascript;
    }
    
    location /dist/ {
        try_files \$uri =404;
        expires 30d;
    }
    
    # Handle V2 shared files (CSS + JavaScript + HTML) 
    location ~ ^/shared/(.+\.css)$ {
        try_files /shared/\$1 =404;
        add_header Content-Type text/css;
    }
    
    location ~ ^/shared/(.+\.js)$ {
        try_files /shared/\$1 =404;
        add_header Content-Type application/javascript;
    }
    
    location ~ ^/shared/(.+\.html)$ {
        try_files /shared/\$1 =404;
        add_header Content-Type text/html;
    }
    
    location ~ ^/shared/(.+\.svg)$ {
        try_files /shared/\$1 =404;
        add_header Content-Type image/svg+xml;
    }

    # Main V2 routes (now without /v2/ prefix)
    
    # Handle designing routes
    location ~ ^/designing/?$ {
        try_files /designing/index.html =404;
    }

    # Handle developing routes
    location ~ ^/developing/?$ {
        try_files /developing/index.html =404;
    }
    
    location ~ ^/developing/([^/]+)/?$ {
        try_files /developing/\$1/index.html =404;
    }

    # Handle component routes (MAIN COMPONENTS)
    location ~ ^/components/?$ {
        try_files /components/index.html =404;
    }
    
    location ~ ^/components/([^/]+)/?$ {
        try_files /components/\$1/index.html =404;
    }

    # Handle pattern routes  
    location ~ ^/patterns/?$ {
        try_files /patterns/index.html =404;
    }
    
    location ~ ^/patterns/([^/]+)/?$ {
        try_files /patterns/\$1/index.html =404;
    }

    # Handle style routes
    location ~ ^/styles/?$ {
        try_files /styles/index.html =404;
    }
    
    location ~ ^/styles/([^/]+)/?$ {
        try_files /styles/\$1/index.html =404;
    }

    # REDIRECTS: V2 paths to main paths (backward compatibility)
    location ~ ^/v2/(.*)$ {
        return 301 /\$1;
    }

    # Root and fallback
    location / {
        try_files \$uri \$uri/ /index.html;
    }
    
    location /health {
        return 200 "healthy - v2 as main\n";
        add_header Content-Type text/plain;
    }
}
EOF

EXPOSE 80

HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/health || exit 1